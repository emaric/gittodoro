{"version":3,"file":"view.js","sourceRoot":"","sources":["view.ts"],"names":[],"mappings":"AAGA;IAAA;IAwDA,CAAC;IApDC,0BAAY,GAAZ,UAAa,OAAgB;QAC3B,IAAI,OAAO,CAAC,GAAG,EAAE;YACf,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAA;SAC3C;QACD,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAA;IACtC,CAAC;IAED,mCAAqB,GAArB,UAAsB,OAAgB;QAAtC,iBAwBC;QAvBO,IAAA,KAA2B,OAAO,CAAC,sBAAsB,EAAE,EAAzD,KAAK,WAAA,EAAE,aAAa,mBAAqC,CAAA;QAEjE,IAAI,aAAa,GAAG,CAAC,EAAE;YACrB,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,GAAG,aAAa,CAAC,CAAA;YAE1C,IAAI,CAAC,YAAY,IAAI,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;YACpD,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC;gBAC7B,IAAI,KAAI,CAAC,YAAY,EAAE;oBACrB,YAAY,CAAC,KAAI,CAAC,YAAY,CAAC,CAAA;oBAC/B,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC,CAAA;iBAC/B;gBACD,KAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAA;YACrC,CAAC,EAAE,aAAa,GAAG,IAAI,CAAC,CAAA;YAExB,IAAI,CAAC,aAAa,IAAI,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;YACvD,IAAI,WAAS,GAAG,aAAa,CAAA;YAC7B,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC;gBAC/B,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,GAAG,EAAE,WAAS,CAAC,CAAA;YAC1C,CAAC,EAAE,IAAI,CAAC,CAAA;SACT;aAAM;YACL,IAAI,CAAC,YAAY,IAAI,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;YACpD,IAAI,CAAC,aAAa,IAAI,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;SACxD;IACH,CAAC;IAED,mCAAqB,GAArB,UAAsB,OAAgB;QACpC,IAAI,OAAO,CAAC,GAAG,EAAE;YACf,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAA;YACnC,IAAI,CAAC,YAAY,IAAI,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;YACpD,IAAI,CAAC,aAAa,IAAI,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;YACvD,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAA;SAClC;aAAM;YACL,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAA;SACxD;IACH,CAAC;IAED,qBAAO,GAAP,UAAQ,OAAgB;QACtB,IAAI,OAAO,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAA;SACpC;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAA;YAC1B,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAA;SACpC;IACH,CAAC;IACH,UAAC;AAAD,CAAC,AAxDD,IAwDC","sourcesContent":["import { Session } from '@/examples/cli-app/models/Session'\nimport { CLIView } from './presenter'\n\nexport class CLI implements CLIView {\n  timeoutTimer?: NodeJS.Timeout\n  intervalTimer?: NodeJS.Timer\n\n  displayStart(session: Session) {\n    if (session.end) {\n      throw new Error('This session has ended.')\n    }\n    console.log('Starting a session...')\n  }\n\n  displayRunningSession(session: Session) {\n    const { state, remainingTime } = session.calcStateRemainingTime()\n\n    if (remainingTime > 0) {\n      console.log(state + ' : ' + remainingTime)\n\n      this.timeoutTimer && clearTimeout(this.timeoutTimer)\n      this.timeoutTimer = setTimeout(() => {\n        if (this.timeoutTimer) {\n          clearTimeout(this.timeoutTimer)\n          console.log(state + ' : ' + 0)\n        }\n        this.displayRunningSession(session)\n      }, remainingTime * 1000)\n\n      this.intervalTimer && clearInterval(this.intervalTimer)\n      let countDown = remainingTime\n      this.intervalTimer = setInterval(() => {\n        console.log(state + ' : ' + --countDown)\n      }, 1000)\n    } else {\n      this.timeoutTimer && clearTimeout(this.timeoutTimer)\n      this.intervalTimer && clearInterval(this.intervalTimer)\n    }\n  }\n\n  displayStoppedSession(session: Session) {\n    if (session.end) {\n      console.log('Stoping a session...')\n      this.timeoutTimer && clearTimeout(this.timeoutTimer)\n      this.intervalTimer && clearInterval(this.intervalTimer)\n      console.log('Session has ended.')\n    } else {\n      throw new Error('The session should have an end date.')\n    }\n  }\n\n  display(session: Session): void {\n    if (session.end) {\n      this.displayStoppedSession(session)\n    } else {\n      this.displayStart(session)\n      this.displayRunningSession(session)\n    }\n  }\n}\n"]}