{"version":3,"file":"ViewSessionDetailsCommand.test.js","sourceRoot":"","sources":["ViewSessionDetailsCommand.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,gCAAgC,CAAA;AACzD,OAAO,EAAE,OAAO,EAAE,MAAM,+BAA+B,CAAA;AAEvD,OAAO,EAAE,UAAU,EAAE,MAAM,oDAAoD,CAAA;AAC/E,OAAO,EAAE,yBAAyB,EAAE,MAAM,kDAAkD,CAAA;AAC5F,OAAO,EAAE,sBAAsB,EAAE,MAAM,gCAAgC,CAAA;AACvE,OAAO,EAAE,4BAA4B,EAAE,MAAM,sCAAsC,CAAA;AAEnF,QAAQ,CAAC,iCAAiC,EAAE;IAC1C,QAAQ,CAAC,qDAAqD,EAAE;QAC9D,EAAE,CAAC,yDAAyD,EAAE;YAC5D,IAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC;gBAC5B,EAAE,EAAE,CAAC;gBACL,QAAQ,EAAE,EAAE;gBACZ,KAAK,EAAE,CAAC;gBACR,IAAI,EAAE,EAAE;gBACR,YAAY,EAAE,CAAC;aAChB,CAAC,CAAA;YAEF,IAAM,aAAa,GAAG,IAAI,OAAO,CAAC;gBAChC,EAAE,EAAE,CAAC;gBACL,KAAK,EAAE,IAAI,IAAI,CAAC,qBAAqB,CAAC;gBACtC,QAAQ,EAAE,QAAQ;aACnB,CAAC,CAAA;YAEF,IAAM,WAAW,GAAG,IAAI,sBAAsB,CAAC,CAAC,aAAa,CAAC,CAAC,CAAA;YAC/D,IAAM,gBAAgB,GAAG,IAAI,4BAA4B,CACvD,wBAAwB,CACzB,CAAA;YACD,IAAM,yBAAyB,GAAG,IAAI,yBAAyB,CAC7D,WAAW,EACX,gBAAgB,CACjB,CAAA;YAED,IAAM,OAAO,GAAuB;gBAClC,KAAK,EAAE,IAAI,IAAI,CAAC,qBAAqB,CAAC;gBACtC,OAAO,EAAE,sBAAsB;aAChC,CAAA;YAED,yBAAyB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;YAE1C,IAAM,cAAc,GAClB,wBAAwB,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAA;YACtE,MAAM,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA;QACtD,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","sourcesContent":["import { Duration } from '@/interactor/entities/Duration'\nimport { Session } from '@/interactor/entities/Session'\nimport { ViewSessionRequest } from '@/interactor/requests/SessionRequest'\nimport { mapSession } from '@/interactor/use-cases/mapper/EntityResponseMapper'\nimport { ViewSessionDetailsCommand } from '@/interactor/use-cases/ViewSessionDetailsCommand'\nimport { SessionInMemoryStorage } from './utils/SessionInMemoryStorage'\nimport { SessionStringOutputPresenter } from './utils/SessionStringOutputPresenter'\n\ndescribe('[ViewSessionDetails] unit tests', () => {\n  describe('when trying to execute View Session Details command', () => {\n    it('should should return a session with the same start date', () => {\n      const duration = new Duration({\n        id: 0,\n        pomodoro: 25,\n        short: 5,\n        long: 15,\n        longInterval: 4,\n      })\n\n      const sampleSession = new Session({\n        id: 0,\n        start: new Date('2022-04-12T09:00:00'),\n        duration: duration,\n      })\n\n      const dataGateway = new SessionInMemoryStorage([sampleSession])\n      const sessionPresenter = new SessionStringOutputPresenter(\n        'View Session Details: '\n      )\n      const viewSessionDetailsCommand = new ViewSessionDetailsCommand(\n        dataGateway,\n        sessionPresenter\n      )\n\n      const request: ViewSessionRequest = {\n        start: new Date('2022-04-12T09:00:00'),\n        message: 'View session details',\n      }\n\n      viewSessionDetailsCommand.execute(request)\n\n      const expectedOutput =\n        'View Session Details: ' + JSON.stringify(mapSession(sampleSession))\n      expect(sessionPresenter.output).toBe(expectedOutput)\n    })\n  })\n})\n"]}