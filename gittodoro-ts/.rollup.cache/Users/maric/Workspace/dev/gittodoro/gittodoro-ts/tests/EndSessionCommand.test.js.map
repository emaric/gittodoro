{"version":3,"file":"EndSessionCommand.test.js","sourceRoot":"","sources":["EndSessionCommand.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,gCAAgC,CAAA;AACzD,OAAO,EAAE,OAAO,EAAE,MAAM,+BAA+B,CAAA;AAEvD,OAAO,EAAE,iBAAiB,EAAE,MAAM,0CAA0C,CAAA;AAC5E,OAAO,EAAE,UAAU,EAAE,MAAM,oDAAoD,CAAA;AAC/E,OAAO,EAAE,sBAAsB,EAAE,MAAM,gCAAgC,CAAA;AACvE,OAAO,EAAE,4BAA4B,EAAE,MAAM,sCAAsC,CAAA;AAEnF,QAAQ,CAAC,gCAAgC,EAAE;IACzC,QAAQ,CAAC,gDAAgD,EAAE;QACzD,EAAE,CAAC,0CAA0C,EAAE;YAC7C,IAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC;gBAC5B,EAAE,EAAE,CAAC;gBACL,QAAQ,EAAE,EAAE;gBACZ,KAAK,EAAE,CAAC;gBACR,IAAI,EAAE,EAAE;gBACR,YAAY,EAAE,CAAC;aAChB,CAAC,CAAA;YAEF,IAAM,iBAAiB,GAAG,IAAI,OAAO,CAAC;gBACpC,EAAE,EAAE,CAAC;gBACL,KAAK,EAAE,IAAI,IAAI,CAAC,qBAAqB,CAAC;gBACtC,QAAQ,EAAE,QAAQ;aACnB,CAAC,CAAA;YAEF,IAAM,WAAW,GAAG,IAAI,sBAAsB,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAA;YACnE,IAAM,SAAS,GAAG,IAAI,4BAA4B,CAChD,uBAAuB,CACxB,CAAA;YACD,IAAM,iBAAiB,GAAG,IAAI,iBAAiB,CAAC,WAAW,EAAE,SAAS,CAAC,CAAA;YACvE,IAAM,OAAO,GAAsB;gBACjC,GAAG,EAAE,IAAI,IAAI,CAAC,qBAAqB,CAAC;gBACpC,OAAO,EAAE,mCAAmC;aAC7C,CAAA;YACD,iBAAiB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;YAElC,IAAM,QAAQ,GAAG,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;YACnD,IAAM,cAAc,GAAG,uBAAuB,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAA;YAEzE,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA;QAC/C,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","sourcesContent":["import { Duration } from '@/interactor/entities/Duration'\nimport { Session } from '@/interactor/entities/Session'\nimport { EndSessionRequest } from '@/interactor/requests/SessionRequest'\nimport { EndSessionCommand } from '@/interactor/use-cases/EndSessionCommand'\nimport { mapSession } from '@/interactor/use-cases/mapper/EntityResponseMapper'\nimport { SessionInMemoryStorage } from './utils/SessionInMemoryStorage'\nimport { SessionStringOutputPresenter } from './utils/SessionStringOutputPresenter'\n\ndescribe('[EndSessionCommand] unit tests', () => {\n  describe('when trying to execute the end session command', () => {\n    it('should end the latest unfinished session', () => {\n      const duration = new Duration({\n        id: 0,\n        pomodoro: 25,\n        short: 5,\n        long: 15,\n        longInterval: 4,\n      })\n\n      const unfinishedSession = new Session({\n        id: 0,\n        start: new Date('2022-04-12T00:00:00'),\n        duration: duration,\n      })\n\n      const dataGateway = new SessionInMemoryStorage([unfinishedSession])\n      const presenter = new SessionStringOutputPresenter(\n        'A session has ended: '\n      )\n      const endSessionCommand = new EndSessionCommand(dataGateway, presenter)\n      const request: EndSessionRequest = {\n        end: new Date('2022-04-12T00:00:00'),\n        message: 'End my latest unfinished session.',\n      }\n      endSessionCommand.execute(request)\n\n      const response = mapSession(dataGateway.storage[0])\n      const expectedOutput = 'A session has ended: ' + JSON.stringify(response)\n\n      expect(presenter.output).toBe(expectedOutput)\n    })\n  })\n})\n"]}