{"version":3,"file":"StartSessionCommand.test.js","sourceRoot":"","sources":["StartSessionCommand.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,4CAA4C,CAAA;AAEhF,OAAO,EAAE,sBAAsB,EAAE,MAAM,sCAAsC,CAAA;AAC7E,OAAO,EAAE,4BAA4B,EAAE,MAAM,4CAA4C,CAAA;AACzF,OAAO,EAAE,UAAU,EAAE,MAAM,oDAAoD,CAAA;AAC/E,QAAQ,CAAC,kCAAkC,EAAE;IAC3C,QAAQ,CAAC,kDAAkD,EAAE;QAC3D,EAAE,CAAC,qCAAqC,EAAE;YACxC,IAAM,WAAW,GAAG,IAAI,sBAAsB,CAAC,EAAE,CAAC,CAAA;YAClD,IAAM,SAAS,GAAG,IAAI,4BAA4B,CAChD,yBAAyB,CAC1B,CAAA;YACD,IAAM,mBAAmB,GAAG,IAAI,mBAAmB,CACjD,WAAW,EACX,SAAS,CACV,CAAA;YACD,IAAM,OAAO,GAAwB;gBACnC,KAAK,EAAE,IAAI,IAAI,CAAC,qBAAqB,CAAC;gBACtC,QAAQ,EAAE,EAAE;gBACZ,KAAK,EAAE,EAAE;gBACT,IAAI,EAAE,EAAE;gBACR,YAAY,EAAE,CAAC;gBACf,OAAO,EAAE,2BAA2B;aACrC,CAAA;YACD,mBAAmB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;YAEpC,IAAM,cAAc,GAClB,yBAAyB;gBACzB,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;YAEpD,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA;QAC/C,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","sourcesContent":["import { StartSessionCommand } from '@/interactor/use-cases/StartSessionCommand'\nimport { StartSessionRequest } from '@/interactor/requests/SessionRequest'\nimport { SessionInMemoryStorage } from '@/tests/utils/SessionInMemoryStorage'\nimport { SessionStringOutputPresenter } from '@/tests/utils/SessionStringOutputPresenter'\nimport { mapSession } from '@/interactor/use-cases/mapper/EntityResponseMapper'\ndescribe('[StartSessionCommand] unit tests', () => {\n  describe('when trying to execute the start session command', () => {\n    it('should create an incomplete session', () => {\n      const dataGateway = new SessionInMemoryStorage([])\n      const presenter = new SessionStringOutputPresenter(\n        'A session has started: '\n      )\n      const startSessionCommand = new StartSessionCommand(\n        dataGateway,\n        presenter\n      )\n      const request: StartSessionRequest = {\n        start: new Date('2022-04-12T00:00:00'),\n        pomodoro: 50,\n        short: 10,\n        long: 20,\n        longInterval: 4,\n        message: 'This is my first session.',\n      }\n      startSessionCommand.execute(request)\n\n      const expectedOutput =\n        'A session has started: ' +\n        JSON.stringify(mapSession(dataGateway.storage[0]))\n\n      expect(presenter.output).toBe(expectedOutput)\n    })\n  })\n})\n"]}